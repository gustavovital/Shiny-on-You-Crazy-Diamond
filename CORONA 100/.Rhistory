u_hat2 <- resid(modelo)^2
white.test <- function(modelo, significancia = 0.05){
## defini dois argumentos, o modelo a ser testado, e
## o nível de signific^ancia do teste, que por defaut
## está 5%
## defino os resíduos^2 e a partir da classe lm eu
## construo um dataframe para as variáveis exógenas
## do da regressão a ser realizada
u_hat2 <- resid(modelo)^2
data.mod <- data.frame(modelo$model)
exog <- attr(modelo$terms, "term.labels")
data <- data.frame(u_hat2, data.mod[exog])
## defino por fim o 'n' do modelo, e a matriz de regressores
## sendo elas as variáveis explicativas, as variáveis explicativas
## ao quadrado, e as interações entre as variáveis explicativas
n <- nrow(data)
matrix.white <- as.matrix(data.frame(model.matrix(u_hat2 ~ . + .^2, data = data),
data.mod[exog]^2))[, -1]
reg.white <- lm(u_hat2 ~ matrix.white)
nr2 <- n*summary(reg.white)$r.squared
x2 <- qchisq(1 - significancia, reg.white[[rank]]-1)
significancia <- as.character(significancia*100)
pvalueWhite <- paste("P-Valor =", as.character(1-pchisq(nr2, reg.white[[rank]]-1)))
## organizo as saidas do teste
if(nr2 > x2){
strn <- paste("Rejeitamos H0 a", significancia, '%')
} else{
strn <- paste("N~ao rejeitamos H0 a", significancia, '%')
}
nr2 <- as.character(nr2)
x2 <- as.character(x2)
hip1 <- 'H0 : HOMOCEDASTICIDADE'
hip2 <- 'H1 : AUSENCIA DE HOMOCEDASTICIDADE'
nr2 <- paste("Estatística de Teste:", nr2)
x2 <- paste("Região Crítica:", x2)
grade <- '________________________________________'
return(cat(c(grade, 'Teste de White Para Heterocedasticidade','',
hip1, hip2,'', strn, nr2, x2, pvalueWhite, grade), sep = "nn"))
}
data("mtcars")
model  <-  lm(wt ~ mpg + disp + gear, data = mtcars)
summary(model)
white.test(model)
white.test <- function(modelo, significancia = 0.05){
## defini dois argumentos, o modelo a ser testado, e
## o nível de signific^ancia do teste, que por defaut
## está 5%
## defino os resíduos^2 e a partir da classe lm eu
## construo um dataframe para as variáveis exógenas
## do da regressão a ser realizada
u_hat2 <- resid(modelo)^2
data.mod <- data.frame(modelo$model)
exog <- attr(modelo$terms, "term.labels")
data <- data.frame(u_hat2, data.mod[exog])
## defino por fim o 'n' do modelo, e a matriz de regressores
## sendo elas as variáveis explicativas, as variáveis explicativas
## ao quadrado, e as interações entre as variáveis explicativas
n <- nrow(data)
matrix.white <- as.matrix(data.frame(model.matrix(u_hat2 ~ . + .^2, data = data),
data.mod[exog]^2))[, -1]
reg.white <- lm(u_hat2 ~ matrix.white)
nr2 <- n*summary(reg.white)$r.squared
x2 <- qchisq(1 - significancia, reg.white[['rank']]-1)
significancia <- as.character(significancia*100)
pvalueWhite <- paste("P-Valor =", as.character(1-pchisq(nr2, reg.white[['rank']]-1)))
## organizo as saidas do teste
if(nr2 > x2){
strn <- paste("Rejeitamos H0 a", significancia, '%')
} else{
strn <- paste("N~ao rejeitamos H0 a", significancia, '%')
}
nr2 <- as.character(nr2)
x2 <- as.character(x2)
hip1 <- 'H0 : HOMOCEDASTICIDADE'
hip2 <- 'H1 : AUSENCIA DE HOMOCEDASTICIDADE'
nr2 <- paste("Estatística de Teste:", nr2)
x2 <- paste("Região Crítica:", x2)
grade <- '________________________________________'
return(cat(c(grade, 'Teste de White Para Heterocedasticidade','',
hip1, hip2,'', strn, nr2, x2, pvalueWhite, grade), sep = "nn"))
}
data("mtcars")
model  <-  lm(wt ~ mpg + disp + gear, data = mtcars)
summary(model)
white.test(model)
white.test <- function(modelo, significancia = 0.05){
## defini dois argumentos, o modelo a ser testado, e
## o nível de signific^ancia do teste, que por defaut
## está 5%
## defino os resíduos^2 e a partir da classe lm eu
## construo um dataframe para as variáveis exógenas
## do da regressão a ser realizada
u_hat2 <- resid(modelo)^2
data.mod <- data.frame(modelo$model)
exog <- attr(modelo$terms, "term.labels")
data <- data.frame(u_hat2, data.mod[exog])
## defino por fim o 'n' do modelo, e a matriz de regressores
## sendo elas as variáveis explicativas, as variáveis explicativas
## ao quadrado, e as interações entre as variáveis explicativas
n <- nrow(data)
matrix.white <- as.matrix(data.frame(model.matrix(u_hat2 ~ . + .^2, data = data),
data.mod[exog]^2))[, -1]
reg.white <- lm(u_hat2 ~ matrix.white)
nr2 <- n*summary(reg.white)$r.squared
x2 <- qchisq(1 - significancia, reg.white[['rank']]-1)
significancia <- as.character(significancia*100)
pvalueWhite <- paste("P-Valor =", as.character(1-pchisq(nr2, reg.white[['rank']]-1)))
## organizo as saidas do teste
if(nr2 > x2){
strn <- paste("Rejeitamos H0 a", significancia, '%')
} else{
strn <- paste("N~ao rejeitamos H0 a", significancia, '%')
}
nr2 <- as.character(nr2)
x2 <- as.character(x2)
hip1 <- 'H0 : HOMOCEDASTICIDADE'
hip2 <- 'H1 : AUSENCIA DE HOMOCEDASTICIDADE'
nr2 <- paste("Estatística de Teste:", nr2)
x2 <- paste("Região Crítica:", x2)
grade <- '________________________________________'
return(cat(c(grade, 'Teste de White Para Heterocedasticidade','',
hip1, hip2,'', strn, nr2, x2, pvalueWhite, grade), sep = "\n"))
}
data("mtcars")
model  <-  lm(wt ~ mpg + disp + gear, data = mtcars)
summary(model)
white.test(model)
white.test <- function(modelo, significancia = 0.05){
## defini dois argumentos, o modelo a ser testado, e
## o nível de signific^ancia do teste, que por defaut
## está 5%
## defino os resíduos^2 e a partir da classe lm eu
## construo um dataframe para as variáveis exógenas
## do da regressão a ser realizada
u_hat2 <- resid(modelo)^2
data.mod <- data.frame(modelo$model)
exog <- attr(modelo$terms, "term.labels")
data <- data.frame(u_hat2, data.mod[exog])
## defino por fim o 'n' do modelo, e a matriz de regressores
## sendo elas as variáveis explicativas, as variáveis explicativas
## ao quadrado, e as interações entre as variáveis explicativas
n <- nrow(data)
matrix.white <- as.matrix(data.frame(model.matrix(u_hat2 ~ . + .^2, data = data),
data.mod[exog]^2))[, -1]
reg.white <- lm(u_hat2 ~ matrix.white)
nr2 <- n*summary(reg.white)$r.squared
x2 <- qchisq(1 - significancia, reg.white[['rank']]-1)
significancia <- as.character(significancia*100)
pvalueWhite <- paste("P-Valor =", as.character(1-pchisq(nr2, reg.white[['rank']]-1)))
## organizo as saidas do teste
if(nr2 > x2){
strn <- paste("Rejeitamos H0 a", significancia, '%')
} else{
strn <- paste("Não rejeitamos H0 a", significancia, '%')
}
nr2 <- as.character(nr2)
x2 <- as.character(x2)
hip1 <- 'H0 : HOMOCEDASTICIDADE'
hip2 <- 'H1 : AUSENCIA DE HOMOCEDASTICIDADE'
nr2 <- paste("Estatística de Teste:", nr2)
x2 <- paste("Região Crítica:", x2)
grade <- '________________________________________'
return(cat(c(grade, 'Teste de White Para Heterocedasticidade','',
hip1, hip2,'', strn, nr2, x2, pvalueWhite, grade), sep = "\n"))
}
whiteTest <- function(modelo, significancia = 0.05){
## defini dois argumentos, o modelo a ser testado, e
## o nível de signific^ancia do teste, que por defaut
## está 5%
## defino os resíduos^2 e a partir da classe lm eu
## construo um dataframe para as variáveis exógenas
## do da regressão a ser realizada
u_hat2 <- resid(modelo)^2
data.mod <- data.frame(modelo$model)
exog <- attr(modelo$terms, "term.labels")
data <- data.frame(u_hat2, data.mod[exog])
## defino por fim o 'n' do modelo, e a matriz de regressores
## sendo elas as variáveis explicativas, as variáveis explicativas
## ao quadrado, e as interações entre as variáveis explicativas
n <- nrow(data)
matrix.white <- as.matrix(data.frame(model.matrix(u_hat2 ~ . + .^2, data = data),
data.mod[exog]^2))[, -1]
reg.white <- lm(u_hat2 ~ matrix.white)
nr2 <- n*summary(reg.white)$r.squared
x2 <- qchisq(1 - significancia, reg.white[['rank']]-1)
significancia <- as.character(significancia*100)
pvalueWhite <- paste("P-Valor =", as.character(1-pchisq(nr2, reg.white[['rank']]-1)))
## organizo as saidas do teste
if(nr2 > x2){
strn <- paste("Rejeitamos H0 a", significancia, '%')
} else{
strn <- paste("Não rejeitamos H0 a", significancia, '%')
}
nr2 <- as.character(nr2)
x2 <- as.character(x2)
hip1 <- 'H0 : HOMOCEDASTICIDADE'
hip2 <- 'H1 : AUSENCIA DE HOMOCEDASTICIDADE'
nr2 <- paste("Estatística de Teste:", nr2)
x2 <- paste("Região Crítica:", x2)
grade <- rep('_', 40)
return(cat(c(grade, 'Teste de White Para Heterocedasticidade','',
hip1, hip2,'', strn, nr2, x2, pvalueWhite, grade), sep = "\n"))
}
data("mtcars")
model  <-  lm(wt ~ mpg + disp + gear, data = mtcars)
summary(model)
white.test(model)
whiteTest <- function(modelo, significancia = 0.05){
## defini dois argumentos, o modelo a ser testado, e
## o nível de signific^ancia do teste, que por defaut
## está 5%
## defino os resíduos^2 e a partir da classe lm eu
## construo um dataframe para as variáveis exógenas
## do da regressão a ser realizada
u_hat2 <- resid(modelo)^2
data.mod <- data.frame(modelo$model)
exog <- attr(modelo$terms, "term.labels")
data <- data.frame(u_hat2, data.mod[exog])
## defino por fim o 'n' do modelo, e a matriz de regressores
## sendo elas as variáveis explicativas, as variáveis explicativas
## ao quadrado, e as interações entre as variáveis explicativas
n <- nrow(data)
matrix.white <- as.matrix(data.frame(model.matrix(u_hat2 ~ . + .^2, data = data),
data.mod[exog]^2))[, -1]
reg.white <- lm(u_hat2 ~ matrix.white)
nr2 <- n*summary(reg.white)$r.squared
x2 <- qchisq(1 - significancia, reg.white[['rank']]-1)
significancia <- as.character(significancia*100)
pvalueWhite <- paste("P-Valor =", as.character(1-pchisq(nr2, reg.white[['rank']]-1)))
## organizo as saidas do teste
if(nr2 > x2){
strn <- paste("Rejeitamos H0 a", significancia, '%')
} else{
strn <- paste("Não rejeitamos H0 a", significancia, '%')
}
nr2 <- as.character(nr2)
x2 <- as.character(x2)
hip1 <- 'H0 : HOMOCEDASTICIDADE'
hip2 <- 'H1 : AUSENCIA DE HOMOCEDASTICIDADE'
nr2 <- paste("Estatística de Teste:", nr2)
x2 <- paste("Região Crítica:", x2)
grade <- rep('=', 40)
return(cat(c(grade, 'Teste de White Para Heterocedasticidade','',
hip1, hip2,'', strn, nr2, x2, pvalueWhite, grade), sep = "\n"))
}
data("mtcars")
model  <-  lm(wt ~ mpg + disp + gear, data = mtcars)
summary(model)
white.test(model)
whiteTest(model)
rep('=', 40)
whiteTest <- function(modelo, significancia = 0.05){
## defini dois argumentos, o modelo a ser testado, e
## o nível de signific^ancia do teste, que por defaut
## está 5%
## defino os resíduos^2 e a partir da classe lm eu
## construo um dataframe para as variáveis exógenas
## do da regressão a ser realizada
u_hat2 <- resid(modelo)^2
data.mod <- data.frame(modelo$model)
exog <- attr(modelo$terms, "term.labels")
data <- data.frame(u_hat2, data.mod[exog])
## defino por fim o 'n' do modelo, e a matriz de regressores
## sendo elas as variáveis explicativas, as variáveis explicativas
## ao quadrado, e as interações entre as variáveis explicativas
n <- nrow(data)
matrix.white <- as.matrix(data.frame(model.matrix(u_hat2 ~ . + .^2, data = data),
data.mod[exog]^2))[, -1]
reg.white <- lm(u_hat2 ~ matrix.white)
nr2 <- n*summary(reg.white)$r.squared
x2 <- qchisq(1 - significancia, reg.white[['rank']]-1)
significancia <- as.character(significancia*100)
pvalueWhite <- paste("P-Valor =", as.character(1-pchisq(nr2, reg.white[['rank']]-1)))
## organizo as saidas do teste
if(nr2 > x2){
strn <- paste("Rejeitamos H0 a", significancia, '%')
} else{
strn <- paste("Não rejeitamos H0 a", significancia, '%')
}
nr2 <- as.character(nr2)
x2 <- as.character(x2)
hip1 <- 'H0 : HOMOCEDASTICIDADE'
hip2 <- 'H1 : AUSENCIA DE HOMOCEDASTICIDADE'
nr2 <- paste("Estatística de Teste:", nr2)
x2 <- paste("Região Crítica:", x2)
grade <- '========================================'
return(cat(c(grade, 'Teste de White Para Heterocedasticidade','',
hip1, hip2,'', strn, nr2, x2, pvalueWhite, grade), sep = "\n"))
}
data("mtcars")
model  <-  lm(wt ~ mpg + disp + gear, data = mtcars)
summary(model)
whiteTest(model)
#### Exercicios Probit ####
library(DescTools)
install.packages('DescTools')
#### Exercicios Probit ####
library(DescTools)
data <- read.csv('E:/Pós Graduação/2019/mroz.csv')
head(data)
modelo <- lm(inlf ~ nwifeinc + educ + exper + expersq + age + kidslt6 + kidsge6,
data = data)
summary(modelo)
anos <- seq(0, 25)
probabilidade_emprego <-
0.5855192 +
50*(modelo[["coefficients"]][["nwifeinc"]]) +
5*(modelo[["coefficients"]][["exper"]]) +
30*(modelo[["coefficients"]][["age"]]) +
1*(modelo[["coefficients"]][["kidslt6"]]) +
0*(modelo[["coefficients"]][["kidsge6"]]) +
anos*(modelo[["coefficients"]][["educ"]])
plot(anos, probabilidade_emprego,
type = 'l')
lnu2=log(resid(modelo)^2)
mqgf_modelo1<- lm(lnu2~data$nwifeinc+data$educ+data$exper+data$expersq+data$age+data$kidslt6+data$kidsge6)
g <- fitted(mqgf_modelo1)
h <- exp(g)
modelo_mqgf<-lm(inlf ~ nwifeinc + educ + exper + expersq + age + kidslt6 + kidsge6,
data = data,
weights = 1/h)
summary(modelo_mqgf)
probit <- glm(inlf ~ nwifeinc + educ + exper + expersq + age + kidslt6 + kidsge6,
data = data,
family = binomial('probit'))
summary(probit)
logit <- glm(inlf ~ nwifeinc + educ + exper + expersq + age + kidslt6 + kidsge6,
data = data,
family = binomial('logit'))
summary(logit)
cbind(modelo = modelo$coefficients,
logit = logit$coefficients/4,
probit = probit$coefficients/2.5)
efeito_probit <-
probit$coefficients[1] +
mean(data$nwifeinc)*probit$coefficients[2] +
mean(data$educ)*probit$coefficients[3] +
mean(data$exper)*probit$coefficients[4] +
mean(data$expersq)*probit$coefficients[5] +
mean(data$age)*probit$coefficients[6] +
mean(data$kidslt6)*probit$coefficients[7] +
mean(data$kidsge6)*probit$coefficients[8]
probit_media <- dnorm(efeito_probit, mean=0, sd=1)*probit$coefficients[6]
probit_media # 1 ano de idade, queda de 2,06%
efeito_logit <-
probit$coefficients[1] +
mean(data$nwifeinc)*logit$coefficients[2] +
mean(data$educ)*logit$coefficients[3] +
mean(data$exper)*logit$coefficients[4] +
mean(data$expersq)*logit$coefficients[5] +
mean(data$age)*logit$coefficients[6] +
mean(data$kidslt6)*logit$coefficients[7] +
mean(data$kidsge6)*logit$coefficients[8]
logit_media <- (exp(efeito_logit)/(1 + exp(efeito_logit))^2)*logit$coefficients[6]
logit_media
#P(Y=1|X) no probit:
mean_probit <- mean(probit$fitted.values)
#P(Y=1|X) no logit:
mean_logit<-mean(logit$fitted.values)
#MPL
mpl <- mean(modelo$fitted.values)
tabela<-cbind(mean_probit, mean_logit, mpl, mean(mean_probit, mean_logit, mpl))
row.names(tabela) <- c("P(Y=1|X)")
colnames(tabela) <- c('Probit', 'Logit', 'MPL', 'Média')
tabela
PseudoR2(logit)
PseudoR2(probit)
summary(modelo)$r.squared
#1.m)
y<-db$inlf
y_hat_probit<-ifelse(probit$fitted.values>0.5, 1, 0)
percentual_acertos_probit<-sum(y+y_hat_probit==2|y+y_hat_probit==0)/(sum(y+y_hat_probit==2|y+y_hat_probit==0)+sum(y+y_hat_probit==1))
y_hat_logit<-ifelse(logit$fitted.values>0.5,1,0)
percentual_acertos_logit<-sum(y+y_hat_logit==2|y+y_hat_logit==0)/(sum(y+y_hat_logit==2|y+y_hat_logit==0)+sum(y+y_hat_logit==1))
p00_probit<-sum(y_hat_probit==0 & y==0)/sum(y==0)
p11_probit<-sum(y_hat_probit==1 & y==1)/sum(y==1)
p00_logit<-sum(y_hat_logit==0 & y==0)/sum(y==0)
p11_logit<-sum(y_hat_logit==1 & y==1)/sum(y==1)
#1.n)
#Calcular a mudanÃ§a na probabilidade quando passa de 0 filhos para 1:
z_probit_semfilhos<-probit$coefficients[1]+mean(db$nwifeinc)*probit$coefficients[2]+mean(db$educ)*probit$coefficients[3]+mean(db$exper)*probit$coefficients[4]+mean(db$expersq)*probit$coefficients[5]+mean(db$age)*probit$coefficients[6]+0*probit$coefficients[7]+0*probit$coefficients[8]
z_probit_1filho<-probit$coefficients[1]+mean(db$nwifeinc)*probit$coefficients[2]+mean(db$educ)*probit$coefficients[3]+mean(db$exper)*probit$coefficients[4]+mean(db$expersq)*probit$coefficients[5]+mean(db$age)*probit$coefficients[6]+1*probit$coefficients[7]+0*probit$coefficients[8]
z_probit_2filhos<-probit$coefficients[1]+mean(db$nwifeinc)*probit$coefficients[2]+mean(db$educ)*probit$coefficients[3]+mean(db$exper)*probit$coefficients[4]+mean(db$expersq)*probit$coefficients[5]+mean(db$age)*probit$coefficients[6]+2*probit$coefficients[7]+0*probit$coefficients[8]
variaÃ§Ã£o_f0f1<-percent(pnorm(z_probit_1filho)-pnorm(z_probit_semfilhos))
variaÃ§Ã£o_f1f2<-percent(pnorm(z_probit_2filhos)-pnorm(z_probit_1filho))
t(matrix(data=c('MudanÃ§a na probabilidade de estar empregada quando se tem o primeiro filho.', 'MudanÃ§a na probabilidade de estar empregada quando se tem o segundo filho', variaÃ§Ã£o_f0f1, variaÃ§Ã£o_f1f2),ncol=2))
##      [,1]
##      [,1]
## [1,] "MudanÃ§a na probabilidade de estar empregada quando se tem o primeiro filho."
# Packages ----
library(tidyverse)
# Parameters ----
c <- 0.63 # marginal propensity to consume
b <- 1500 # sensibility of the investment to the interest rate
k <- 0.6 # sensibility of the money demand to the product
h <- 2700 # sensibility of the money demand to the interest rate
# exogenous variable ----
C_bar <- 55 # autonomous consumption
I_bar <- 75 # autonomous investment
G_bar <- 200 # government spending
T_bar <- 110 # tax on income
M_bar <- 200 # money supply
P_bar <- 1 # price level (fixed in the short-run)
# Matrix representation ----
A <- rbind(c(1, -1, -1, 0),
c(-c, 1, 0, 0),
c(0, 0, 1, b),
c(k, 0, 0, -h))
d <- c(G_bar, C_bar-c*T_bar, I_bar, M_bar/P_bar)
# Solutions ----
x <- solve(A, d)
# Creating diagram ----
Y <- seq(0.95*x[1], 1.05*x[1], 1)
C <- C_bar + c*(Y - T_bar)
I <- Y - C - G_bar
IS <- (I_bar-I)/b
LM <- 1/h*(k*Y-M_bar/P_bar)
data <- tibble(Y, C, I, IS, LM)
# graphing ----
ggplot(data, aes(x = Y)) +
geom_line(aes(y = IS), size = 2, alpha = .7, colour = 'dodgerblue3') +
geom_line(aes(y = LM), size = 2, alpha = .7, colour = 'tomato3') +
theme_minimal()
